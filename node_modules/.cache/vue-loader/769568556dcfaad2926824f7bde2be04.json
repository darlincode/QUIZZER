{"remainingRequest":"/home/darlington-chuks/Desktop/new-projs/Quiz-App/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/darlington-chuks/Desktop/new-projs/Quiz-App/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/darlington-chuks/Desktop/new-projs/Quiz-App/src/components/QuestionBox.vue","mtime":1622737394398},{"path":"/home/darlington-chuks/Desktop/new-projs/Quiz-App/node_modules/cache-loader/dist/cjs.js","mtime":1622713490251},{"path":"/home/darlington-chuks/Desktop/new-projs/Quiz-App/node_modules/thread-loader/dist/cjs.js","mtime":1622633772483},{"path":"/home/darlington-chuks/Desktop/new-projs/Quiz-App/node_modules/babel-loader/lib/index.js","mtime":1622633772490},{"path":"/home/darlington-chuks/Desktop/new-projs/Quiz-App/node_modules/cache-loader/dist/cjs.js","mtime":1622713490251},{"path":"/home/darlington-chuks/Desktop/new-projs/Quiz-App/node_modules/vue-loader/lib/index.js","mtime":1622633810743}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport _ from 'lodash'\n\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data(){\n    return {\n      selectedIndex: null,\n      shuffledAnswers: [],\n      correctIndex: null,\n      answered: false,\n      displayMessage: '',\n      countAns: 0\n    }\n  },\n  watch: {\n    currentQuestion : {\n      immediate: true,\n      handler(){\n        this.selectedIndex = null,\n        this.shuffleAnswers()\n        this.answered = false,\n        this.displayMessage = ''\n      }\n    }\n  },\n  methods:{\n    selectAnswer(index) {\n      if(!this.answered){\n        this.selectedIndex = index\n      }\n      console.log(index)\n    },\n    highlightAnswer(index) {\n        let retClass = ''\n\n        if(!this.answered && index === this.selectedIndex){\n            retClass = 'selected'\n        }\n        else if(this.answered && index === this.correctIndex){\n          retClass = 'correct'\n        }\n        else if(this.answered && index === this.selectedIndex && index !== this.correctIndex){\n          retClass ='incorrect'\n        }\n        return retClass\n    },\n    submitAnswer(){\n      let isCorrect = false\n\n      this.displayMessage = \"SORRY YOO! You were wrong..\"\n      this.answered = true\n\n      if(this.selectedIndex === this.correctIndex){\n        isCorrect = true\n        this.displayMessage = \"CHEERS YOO! You got it right!\"\n      }\n      this.countAns++;\n\n      if(this.countAns>9){\n          this.displayMessage = this.displayMessage+\"\\nGame is Over! Thanks for Playing\\n\";\n      }\n\n      this.increment(isCorrect)\n\n    },\n    shuffleAnswers(){\n      let answers = [...this.currentQuestion.incorrect_answers,this.currentQuestion.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n\n    }\n  },\n  computed: {\n    Answers() {\n      let answers = [...this.currentQuestion.incorrect_answers]\n      answers.push(this.currentQuestion.correct_answer)\n      return answers;\n    }\n  }\n}\n",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"question-box\">\n    <b-jumbotron>\n      <template slot=\"lead\">\n        <h5 v-html=\"currentQuestion.question\"></h5>\n        <!-- {{currentQuestion.question}} -->\n      </template>\n      <hr>\n\n      <b-list-group>\n        <b-list-group-item\n          v-for=\"(answer,index) in shuffledAnswers\" \n          :key=\"index\" \n          @click=\"selectAnswer(index)\"\n          :class=\"highlightAnswer(index)\">\n          <!-- {{answer}} -->\n          <b-p v-html=\"answer\"></b-p>\n        </b-list-group-item>\n      </b-list-group>\n\n      <br>\n\n      <b-button variant=\"primary\"\n      @click=\"submitAnswer\"\n      :disabled=\"selectedIndex===null || answered \" >\n        Submit</b-button> \n      <b-button @click=\"next\" variant=\"success\"\n      :disabled=\"!answered || countAns>9\">\n        Next\n      </b-button>\n       <br><br>\n       <b><b-h3>{{displayMessage}}</b-h3></b>\n    </b-jumbotron>\n   \n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data(){\n    return {\n      selectedIndex: null,\n      shuffledAnswers: [],\n      correctIndex: null,\n      answered: false,\n      displayMessage: '',\n      countAns: 0\n    }\n  },\n  watch: {\n    currentQuestion : {\n      immediate: true,\n      handler(){\n        this.selectedIndex = null,\n        this.shuffleAnswers()\n        this.answered = false,\n        this.displayMessage = ''\n      }\n    }\n  },\n  methods:{\n    selectAnswer(index) {\n      if(!this.answered){\n        this.selectedIndex = index\n      }\n      console.log(index)\n    },\n    highlightAnswer(index) {\n        let retClass = ''\n\n        if(!this.answered && index === this.selectedIndex){\n            retClass = 'selected'\n        }\n        else if(this.answered && index === this.correctIndex){\n          retClass = 'correct'\n        }\n        else if(this.answered && index === this.selectedIndex && index !== this.correctIndex){\n          retClass ='incorrect'\n        }\n        return retClass\n    },\n    submitAnswer(){\n      let isCorrect = false\n\n      this.displayMessage = \"SORRY YOO! You were wrong..\"\n      this.answered = true\n\n      if(this.selectedIndex === this.correctIndex){\n        isCorrect = true\n        this.displayMessage = \"CHEERS YOO! You got it right!\"\n      }\n      this.countAns++;\n\n      if(this.countAns>9){\n          this.displayMessage = this.displayMessage+\"\\nGame is Over! Thanks for Playing\\n\";\n      }\n\n      this.increment(isCorrect)\n\n    },\n    shuffleAnswers(){\n      let answers = [...this.currentQuestion.incorrect_answers,this.currentQuestion.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n\n    }\n  },\n  computed: {\n    Answers() {\n      let answers = [...this.currentQuestion.incorrect_answers]\n      answers.push(this.currentQuestion.correct_answer)\n      return answers;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.btn {\n  margin: 0 10px;\n}\n.list-group-item:hover {\n  background: rgb(211, 133, 204);\n  cursor: pointer;\n}\n.selected {\n  background-color: rgb(125, 192, 255);\n}\n.correct{\n  background-color: rgb(3, 247, 3);\n}\n.incorrect{\n  background-color: rgb(236, 2, 2);\n}\n</style>\n"]}]}